{"ast":null,"code":"// API service for communicating with Django backend\n\nconst API_BASE_URL = '/api';\nclass ApiService {\n  constructor() {\n    this.baseURL = API_BASE_URL;\n  }\n  async makeRequest(endpoint, options = {}) {\n    const url = `${this.baseURL}${endpoint}`;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers\n      },\n      ...options\n    };\n    try {\n      const response = await fetch(url, config);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('API request failed:', error);\n      throw error;\n    }\n  }\n\n  // Test API connection\n  async testConnection() {\n    return this.makeRequest('/test/');\n  }\n\n  // Get academic programs\n  async getAcademicPrograms() {\n    return this.makeRequest('/academic-programs/');\n  }\n\n  // Get detailed information about a specific program\n  async getProgramDetail(programId) {\n    return this.makeRequest(`/academic-programs/${programId}/`);\n  }\n\n  // Get news and events\n  async getNewsEvents() {\n    return this.makeRequest('/news-events/');\n  }\n\n  // Get admissions information\n  async getAdmissionsInfo() {\n    return this.makeRequest('/admissions-info/');\n  }\n\n  // Get downloads\n  async getDownloads() {\n    return this.makeRequest('/downloads/');\n  }\n\n  // Submit contact form\n  async submitContactForm(formData) {\n    return this.makeRequest('/contact-form/', {\n      method: 'POST',\n      body: JSON.stringify(formData)\n    });\n  }\n}\n\n// Create and export a singleton instance\nconst apiService = new ApiService();\nexport default apiService;","map":{"version":3,"names":["API_BASE_URL","ApiService","constructor","baseURL","makeRequest","endpoint","options","url","config","headers","response","fetch","ok","Error","status","json","error","console","testConnection","getAcademicPrograms","getProgramDetail","programId","getNewsEvents","getAdmissionsInfo","getDownloads","submitContactForm","formData","method","body","JSON","stringify","apiService"],"sources":["C:/CodingProjects/ccb-portal/src/services/api.js"],"sourcesContent":["// API service for communicating with Django backend\r\n\r\nconst API_BASE_URL = '/api';\r\n\r\nclass ApiService {\r\n    constructor() {\r\n        this.baseURL = API_BASE_URL;\r\n    }\r\n\r\n    async makeRequest(endpoint, options = {}) {\r\n        const url = `${this.baseURL}${endpoint}`;\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                ...options.headers,\r\n            },\r\n            ...options,\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(url, config);\r\n            \r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            \r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error('API request failed:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    // Test API connection\r\n    async testConnection() {\r\n        return this.makeRequest('/test/');\r\n    }\r\n\r\n    // Get academic programs\r\n    async getAcademicPrograms() {\r\n        return this.makeRequest('/academic-programs/');\r\n    }\r\n\r\n    // Get detailed information about a specific program\r\n    async getProgramDetail(programId) {\r\n        return this.makeRequest(`/academic-programs/${programId}/`);\r\n    }\r\n\r\n    // Get news and events\r\n    async getNewsEvents() {\r\n        return this.makeRequest('/news-events/');\r\n    }\r\n\r\n    // Get admissions information\r\n    async getAdmissionsInfo() {\r\n        return this.makeRequest('/admissions-info/');\r\n    }\r\n\r\n    // Get downloads\r\n    async getDownloads() {\r\n        return this.makeRequest('/downloads/');\r\n    }\r\n\r\n    // Submit contact form\r\n    async submitContactForm(formData) {\r\n        return this.makeRequest('/contact-form/', {\r\n            method: 'POST',\r\n            body: JSON.stringify(formData),\r\n        });\r\n    }\r\n}\r\n\r\n// Create and export a singleton instance\r\nconst apiService = new ApiService();\r\nexport default apiService; "],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAG,MAAM;AAE3B,MAAMC,UAAU,CAAC;EACbC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,OAAO,GAAGH,YAAY;EAC/B;EAEA,MAAMI,WAAWA,CAACC,QAAQ,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACtC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACJ,OAAO,GAAGE,QAAQ,EAAE;IACxC,MAAMG,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,GAAGH,OAAO,CAACG;MACf,CAAC;MACD,GAAGH;IACP,CAAC;IAED,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAG,EAAEC,MAAM,CAAC;MAEzC,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC7D;MAEA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK;IACf;EACJ;;EAEA;EACA,MAAME,cAAcA,CAAA,EAAG;IACnB,OAAO,IAAI,CAACd,WAAW,CAAC,QAAQ,CAAC;EACrC;;EAEA;EACA,MAAMe,mBAAmBA,CAAA,EAAG;IACxB,OAAO,IAAI,CAACf,WAAW,CAAC,qBAAqB,CAAC;EAClD;;EAEA;EACA,MAAMgB,gBAAgBA,CAACC,SAAS,EAAE;IAC9B,OAAO,IAAI,CAACjB,WAAW,CAAC,sBAAsBiB,SAAS,GAAG,CAAC;EAC/D;;EAEA;EACA,MAAMC,aAAaA,CAAA,EAAG;IAClB,OAAO,IAAI,CAAClB,WAAW,CAAC,eAAe,CAAC;EAC5C;;EAEA;EACA,MAAMmB,iBAAiBA,CAAA,EAAG;IACtB,OAAO,IAAI,CAACnB,WAAW,CAAC,mBAAmB,CAAC;EAChD;;EAEA;EACA,MAAMoB,YAAYA,CAAA,EAAG;IACjB,OAAO,IAAI,CAACpB,WAAW,CAAC,aAAa,CAAC;EAC1C;;EAEA;EACA,MAAMqB,iBAAiBA,CAACC,QAAQ,EAAE;IAC9B,OAAO,IAAI,CAACtB,WAAW,CAAC,gBAAgB,EAAE;MACtCuB,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ;IACjC,CAAC,CAAC;EACN;AACJ;;AAEA;AACA,MAAMK,UAAU,GAAG,IAAI9B,UAAU,CAAC,CAAC;AACnC,eAAe8B,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}